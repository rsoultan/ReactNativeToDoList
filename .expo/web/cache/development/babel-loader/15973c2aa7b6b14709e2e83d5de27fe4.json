{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    \"id\": 0,\n    \"title\": \"Taffer\",\n    \"done\": true\n  }, {\n    \"id\": 1,\n    \"title\": \"Faire les courses\",\n    \"done\": false\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      SetTasks = _useState2[1];\n\n  var deleteTask = function deleteTask(task) {\n    var task_index = tasks.findIndex(function (t) {\n      return task.id === t.id;\n    });\n\n    var new_tasks = _toConsumableArray(tasks);\n\n    new_tasks.splice(task_index, 1);\n    SetTasks(new_tasks);\n  };\n\n  var moveTask = function moveTask(task) {\n    var task_index = tasks.findIndex(function (t) {\n      return task.id === t.id;\n    });\n\n    var new_tasks = _toConsumableArray(tasks);\n\n    new_tasks[task_index].done = !task.done;\n    SetTasks(new_tasks);\n  };\n\n  var addTask = function addTask() {};\n\n  var renderTasks = function renderTasks(task, expected) {\n    if (task.done !== expected) return null;\n    return _jsxs(View, {\n      style: styles.task,\n      children: [_jsx(Text, {\n        style: _objectSpread(_objectSpread({}, styles.small_text), {}, {\n          flex: 1\n        }),\n        children: task.title\n      }), _jsx(TouchableHighlight, {\n        underlayColor: \"transparent\",\n        onPress: moveTask.bind(_this, task),\n        children: _jsx(View, {\n          style: styles.move_button,\n          children: _jsx(Text, {\n            children: \"Move\"\n          })\n        })\n      }), _jsx(TouchableHighlight, {\n        underlayColor: \"transparent\",\n        onPress: deleteTask.bind(_this, task),\n        children: _jsx(View, {\n          style: styles.delete_button,\n          children: _jsx(Text, {\n            children: \"Delete\"\n          })\n        })\n      })]\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.title_section,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Todo list\"\n      })\n    }), _jsxs(View, {\n      style: styles.content_section,\n      children: [_jsxs(View, {\n        style: styles.tasks_section,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Task(s) to do:\"\n        }), _jsx(FlatList, {\n          data: tasks,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return renderTasks(item, false);\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.tasks_section,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Task(s) done:\"\n        }), _jsx(FlatList, {\n          data: tasks,\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return renderTasks(item, true);\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.bottom_section,\n      children: _jsx(TextInput, {\n        placeholder: \"Name of your task...\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Platform.OS === 'android' ? 35 : 0,\n    backgroundColor: \"#D4FBFF\"\n  },\n  title_section: {\n    flex: 0.5,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignContent: 'center',\n    backgroundColor: \"#5C8C91\"\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  content_section: {\n    flex: 5,\n    backgroundColor: \"#A2D9DF\"\n  },\n  tasks_section: {\n    flex: 3\n  },\n  bottom_section: {\n    flex: 0.5,\n    padding: 10,\n    backgroundColor: '#5C8C91',\n    flexDirection: 'row'\n  },\n  task: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    backgroundColor: '#5C8C91',\n    borderRadius: 10,\n    padding: 10,\n    margin: 10\n  },\n  move_button: {\n    textAlign: 'center',\n    padding: 10,\n    marginHorizontal: 10,\n    backgroundColor: '#D5D8D8'\n  },\n  delete_button: {\n    textAlign: 'center',\n    padding: 10,\n    marginHorizontal: 10,\n    backgroundColor: \"#FF614F\"\n  },\n  small_text: {\n    fontSize: 12,\n    textAlign: 'center',\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/home/romuald/ReactNativeToDoList/Todo.jsx"],"names":["useState","TodoScreen","navigation","tasks","SetTasks","deleteTask","task","task_index","findIndex","t","id","new_tasks","splice","moveTask","done","addTask","renderTasks","expected","styles","small_text","flex","title","bind","move_button","delete_button","container","title_section","content_section","tasks_section","item","bottom_section","StyleSheet","create","paddingTop","Platform","OS","backgroundColor","flexDirection","justifyContent","alignContent","textAlign","fontSize","fontWeight","color","padding","alignItems","borderRadius","margin","marginHorizontal"],"mappings":";;;;;;;;;;;;;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,eAAe,SAASC,UAAT,OAAoC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC/C,kBAA0BF,QAAQ,CAAC,CAAC;AAChC,UAAM,CAD0B;AAEhC,aAAS,QAFuB;AAGhC,YAAQ;AAHwB,GAAD,EAIhC;AACC,UAAM,CADP;AAEC,aAAS,mBAFV;AAGC,YAAQ;AAHT,GAJgC,CAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AASA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AACzB,QAAMC,UAAU,GAAGJ,KAAK,CAACK,SAAN,CAAgB,UAACC,CAAD;AAAA,aAAOH,IAAI,CAACI,EAAL,KAAYD,CAAC,CAACC,EAArB;AAAA,KAAhB,CAAnB;;AACA,QAAMC,SAAS,sBAAOR,KAAP,CAAf;;AACAQ,IAAAA,SAAS,CAACC,MAAV,CAAiBL,UAAjB,EAA6B,CAA7B;AACAH,IAAAA,QAAQ,CAACO,SAAD,CAAR;AACH,GALD;;AAMA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAACP,IAAD,EAAU;AACvB,QAAMC,UAAU,GAAGJ,KAAK,CAACK,SAAN,CAAgB,UAACC,CAAD;AAAA,aAAOH,IAAI,CAACI,EAAL,KAAYD,CAAC,CAACC,EAArB;AAAA,KAAhB,CAAnB;;AACA,QAAMC,SAAS,sBAAOR,KAAP,CAAf;;AACAQ,IAAAA,SAAS,CAACJ,UAAD,CAAT,CAAsBO,IAAtB,GAA6B,CAACR,IAAI,CAACQ,IAAnC;AACAV,IAAAA,QAAQ,CAACO,SAAD,CAAR;AACH,GALD;;AAMA,MAAMI,OAAO,GAAG,SAAVA,OAAU,GAAM,CAErB,CAFD;;AAGA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACV,IAAD,EAAOW,QAAP,EAAoB;AACpC,QAAIX,IAAI,CAACQ,IAAL,KAAcG,QAAlB,EACI,OAAO,IAAP;AACJ,WACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACZ,IAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,kCAAMY,MAAM,CAACC,UAAb;AAAyBC,UAAAA,IAAI,EAAE;AAA/B,UAAX;AAAA,kBAA+Cd,IAAI,CAACe;AAApD,QADJ,EAEI,KAAC,kBAAD;AAAoB,QAAA,aAAa,EAAC,aAAlC;AAAgD,QAAA,OAAO,EAAER,QAAQ,CAACS,IAAT,CAAc,KAAd,EAAoBhB,IAApB,CAAzD;AAAA,kBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEY,MAAM,CAACK,WAApB;AAAA,oBACI,KAAC,IAAD;AAAA;AAAA;AADJ;AADJ,QAFJ,EAOI,KAAC,kBAAD;AAAoB,QAAA,aAAa,EAAC,aAAlC;AAAgD,QAAA,OAAO,EAAElB,UAAU,CAACiB,IAAX,CAAgB,KAAhB,EAAsBhB,IAAtB,CAAzD;AAAA,kBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEY,MAAM,CAACM,aAApB;AAAA,oBACI,KAAC,IAAD;AAAA;AAAA;AADJ;AADJ,QAPJ;AAAA,MADJ;AAeH,GAlBD;;AAmBA,SACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEN,MAAM,CAACO,SAA5B;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACQ,aAApB;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACG,KAApB;AAAA;AAAA;AADJ,MADJ,EAII,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACS,eAApB;AAAA,iBACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACU,aAApB;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEV,MAAM,CAACG,KAApB;AAAA;AAAA,UADJ,EAEI,KAAC,QAAD;AACI,UAAA,IAAI,EAAElB,KADV;AAEI,UAAA,UAAU,EAAE;AAAA,gBAAG0B,IAAH,SAAGA,IAAH;AAAA,mBAAcb,WAAW,CAACa,IAAD,EAAO,KAAP,CAAzB;AAAA,WAFhB;AAGI,UAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,mBAAUA,IAAI,CAACnB,EAAf;AAAA;AAHlB,UAFJ;AAAA,QADJ,EASI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEQ,MAAM,CAACU,aAApB;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEV,MAAM,CAACG,KAApB;AAAA;AAAA,UADJ,EAEI,KAAC,QAAD;AACI,UAAA,IAAI,EAAElB,KADV;AAEI,UAAA,UAAU,EAAE;AAAA,gBAAG0B,IAAH,SAAGA,IAAH;AAAA,mBAAcb,WAAW,CAACa,IAAD,EAAO,IAAP,CAAzB;AAAA,WAFhB;AAGI,UAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,mBAAUA,IAAI,CAACnB,EAAf;AAAA;AAHlB,UAFJ;AAAA,QATJ;AAAA,MAJJ,EAsBI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEQ,MAAM,CAACY,cAApB;AAAA,gBACI,KAAC,SAAD;AAAW,QAAA,WAAW,EAAC;AAAvB;AADJ,MAtBJ;AAAA,IADJ;AA4BH;AAED,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPL,IAAAA,IAAI,EAAE,CADC;AAEPa,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,EAA5B,GAAiC,CAFtC;AAGPC,IAAAA,eAAe,EAAE;AAHV,GADkB;AAM7BV,EAAAA,aAAa,EAAE;AACXN,IAAAA,IAAI,EAAE,GADK;AAEXiB,IAAAA,aAAa,EAAE,QAFJ;AAGXC,IAAAA,cAAc,EAAE,QAHL;AAIXC,IAAAA,YAAY,EAAE,QAJH;AAKXH,IAAAA,eAAe,EAAE;AALN,GANc;AAa7Bf,EAAAA,KAAK,EAAE;AACHmB,IAAAA,SAAS,EAAE,QADR;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAGHC,IAAAA,UAAU,EAAE,MAHT;AAIHC,IAAAA,KAAK,EAAE;AAJJ,GAbsB;AAmB7BhB,EAAAA,eAAe,EAAE;AACbP,IAAAA,IAAI,EAAE,CADO;AAEbgB,IAAAA,eAAe,EAAE;AAFJ,GAnBY;AAuB7BR,EAAAA,aAAa,EAAE;AACXR,IAAAA,IAAI,EAAE;AADK,GAvBc;AA0B7BU,EAAAA,cAAc,EAAE;AACZV,IAAAA,IAAI,EAAE,GADM;AAEZwB,IAAAA,OAAO,EAAE,EAFG;AAGZR,IAAAA,eAAe,EAAE,SAHL;AAIZC,IAAAA,aAAa,EAAE;AAJH,GA1Ba;AAgC7B/B,EAAAA,IAAI,EAAE;AACFc,IAAAA,IAAI,EAAE,CADJ;AAEFiB,IAAAA,aAAa,EAAE,KAFb;AAGFC,IAAAA,cAAc,EAAE,cAHd;AAIFO,IAAAA,UAAU,EAAE,QAJV;AAKFT,IAAAA,eAAe,EAAE,SALf;AAMFU,IAAAA,YAAY,EAAE,EANZ;AAOFF,IAAAA,OAAO,EAAE,EAPP;AAQFG,IAAAA,MAAM,EAAE;AARN,GAhCuB;AA0C7BxB,EAAAA,WAAW,EAAE;AACTiB,IAAAA,SAAS,EAAE,QADF;AAETI,IAAAA,OAAO,EAAE,EAFA;AAGTI,IAAAA,gBAAgB,EAAE,EAHT;AAITZ,IAAAA,eAAe,EAAE;AAJR,GA1CgB;AAgD7BZ,EAAAA,aAAa,EAAE;AACXgB,IAAAA,SAAS,EAAE,QADA;AAEXI,IAAAA,OAAO,EAAE,EAFE;AAGXI,IAAAA,gBAAgB,EAAE,EAHP;AAIXZ,IAAAA,eAAe,EAAE;AAJN,GAhDc;AAsD7BjB,EAAAA,UAAU,EAAE;AACRsB,IAAAA,QAAQ,EAAE,EADF;AAERD,IAAAA,SAAS,EAAE,QAFH;AAGRG,IAAAA,KAAK,EAAE,OAHC;AAIRD,IAAAA,UAAU,EAAE;AAJJ;AAtDiB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, FlatList, SafeAreaView, Platform, TextInput, TouchableHighlight } from 'react-native';\nimport { useState } from \"react\";\n\nexport default function TodoScreen({ navigation }) {\n    const [tasks, SetTasks] = useState([{\n        \"id\": 0,\n        \"title\": \"Taffer\",\n        \"done\": true\n    }, {\n        \"id\": 1,\n        \"title\": \"Faire les courses\",\n        \"done\": false\n    }]);\n    const deleteTask = (task) => {\n        const task_index = tasks.findIndex((t) => task.id === t.id);\n        const new_tasks = [...tasks];\n        new_tasks.splice(task_index, 1);\n        SetTasks(new_tasks);\n    };\n    const moveTask = (task) => {\n        const task_index = tasks.findIndex((t) => task.id === t.id);\n        const new_tasks = [...tasks];\n        new_tasks[task_index].done = !task.done;\n        SetTasks(new_tasks);\n    };\n    const addTask = () => {\n\n    };\n    const renderTasks = (task, expected) => {\n        if (task.done !== expected)\n            return null;\n        return (\n            <View style={styles.task}>\n                <Text style={{...styles.small_text, flex: 1}}>{task.title}</Text>\n                <TouchableHighlight underlayColor='transparent' onPress={moveTask.bind(this, task)}>\n                    <View style={styles.move_button}>\n                        <Text>Move</Text>\n                    </View>\n                </TouchableHighlight>\n                <TouchableHighlight underlayColor='transparent' onPress={deleteTask.bind(this, task)}>\n                    <View style={styles.delete_button}>\n                        <Text>Delete</Text>\n                    </View>\n                </TouchableHighlight>\n            </View>\n        );\n    };\n    return (\n        <SafeAreaView style={styles.container}>\n            <View style={styles.title_section}>\n                <Text style={styles.title}>Todo list</Text>\n            </View>\n            <View style={styles.content_section}>\n                <View style={styles.tasks_section}>\n                    <Text style={styles.title}>Task(s) to do:</Text>\n                    <FlatList\n                        data={tasks}\n                        renderItem={({ item }) => renderTasks(item, false)}\n                        keyExtractor={(item) => item.id}\n                    />\n                </View>\n                <View style={styles.tasks_section}>\n                    <Text style={styles.title}>Task(s) done:</Text>\n                    <FlatList\n                        data={tasks}\n                        renderItem={({ item }) => renderTasks(item, true)}\n                        keyExtractor={(item) => item.id}\n                    />\n                </View>\n            </View>\n            <View style={styles.bottom_section}>\n                <TextInput placeholder='Name of your task...'></TextInput>\n            </View>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingTop: Platform.OS === 'android' ? 35 : 0,\n        backgroundColor: \"#D4FBFF\"\n    },\n    title_section: {\n        flex: 0.5,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignContent: 'center',\n        backgroundColor: \"#5C8C91\"\n    },\n    title: {\n        textAlign: 'center',\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: 'white'\n    },\n    content_section: {\n        flex: 5,\n        backgroundColor: \"#A2D9DF\"\n    },\n    tasks_section: {\n        flex: 3\n    },\n    bottom_section: {\n        flex: 0.5,\n        padding: 10,\n        backgroundColor: '#5C8C91',\n        flexDirection: 'row'\n    },\n    task: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        backgroundColor: '#5C8C91',\n        borderRadius: 10,\n        padding: 10,\n        margin: 10\n    },\n    move_button: {\n        textAlign: 'center',\n        padding: 10,\n        marginHorizontal: 10,\n        backgroundColor: '#D5D8D8'\n    },\n    delete_button: {\n        textAlign: 'center',\n        padding: 10,\n        marginHorizontal: 10,\n        backgroundColor: \"#FF614F\"\n    },\n    small_text: {\n        fontSize: 12,\n        textAlign: 'center',\n        color: 'white',\n        fontWeight: 'bold'\n    }\n});"]},"metadata":{},"sourceType":"module"}