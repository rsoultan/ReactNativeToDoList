{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    \"title\": \"Taffer\"\n  }, {\n    \"title\": \"Faire les courses\"\n  }, {\n    \"title\": \"Manger\"\n  }, {\n    \"title\": \"Aller à la salle\"\n  }, {\n    \"title\": \"test\"\n  }, {\n    \"title\": \"test bis\"\n  }, {\n    \"title\": \"test bis 2\"\n  }, {\n    \"title\": \"test bis 3\"\n  }, {\n    \"title\": \"test bis 4\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      SetTodos = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text_input = _useState4[0],\n      SetTextInput = _useState4[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Todos:\"\n    }), _jsx(ScrollView, {\n      children: todos.map(function (todo, index) {\n        return _jsx(TouchableOpacity, {\n          style: styles.todo,\n          onPress: function onPress() {\n            return SetTodos(todos.filter(function (t, i) {\n              return i != index;\n            }));\n          },\n          children: _jsx(Text, {\n            style: styles.add_text,\n            children: todo.title\n          })\n        }, index);\n      })\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(View, {\n          style: styles.addButton,\n          children: _jsx(Text, {\n            children: \"Back\"\n          })\n        })\n      }), _jsx(TextInput, {\n        value: text_input,\n        style: styles.input,\n        onChange: function onChange(event) {\n          event.preventDefault();\n          SetTextInput(event.target.value);\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          if (!text_input.length) {\n            SetTodos(todos.concat([{\n              'title': text_input\n            }]));\n            SetTextInput(\"\");\n          }\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          SetTodos(todos.concat([{\n            'title': text_input\n          }]));\n          SetTextInput(\"\");\n        },\n        children: _jsx(View, {\n          style: styles.addButton,\n          children: _jsx(Text, {\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-around'\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  todo: {\n    borderRadius: 10,\n    borderBottomWidth: 1,\n    padding: 10,\n    marginVertical: 2,\n    backgroundColor: '#8AD1DB'\n  },\n  form: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  input: {\n    borderColor: 'black',\n    borderWidth: 2,\n    justifyContent: 'flex-start',\n    padding: 20,\n    marginHorizontal: 10,\n    height: 50,\n    borderRadius: 10\n  },\n  addButton: {\n    justifyContent: 'flex-end',\n    justifyContent: 'center',\n    textAlign: 'center',\n    borderRadius: \"100%\",\n    height: 50,\n    width: 50,\n    backgroundColor: '#8AD1DB'\n  }\n});","map":{"version":3,"sources":["/home/romuald/ReactNativeToDoList/Todo.jsx"],"names":["useState","TodoScreen","navigation","todos","SetTodos","text_input","SetTextInput","styles","container","title","map","todo","index","filter","t","i","add_text","form","goBack","addButton","input","event","preventDefault","target","value","length","concat","StyleSheet","create","padding","flex","flexDirection","justifyContent","textAlign","fontSize","fontWeight","borderRadius","borderBottomWidth","marginVertical","backgroundColor","alignSelf","borderColor","borderWidth","marginHorizontal","height","width"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, ScrollView, TouchableOpacity, TextInput } from 'react-native';\nimport { useState } from \"react\";\n\nexport default function TodoScreen({ navigation }) {\n    const [todos, SetTodos] = useState([{\n        \"title\": \"Taffer\"\n    }, {\n        \"title\": \"Faire les courses\"\n    }, {\n        \"title\": \"Manger\"\n    }, {\n        \"title\": \"Aller à la salle\"\n    }, {\n        \"title\": \"test\"\n    }, {\n        \"title\": \"test bis\"\n    }, {\n        \"title\": \"test bis 2\"\n    }, {\n        \"title\": \"test bis 3\"\n    }, {\n        \"title\": \"test bis 4\"\n    }]);\n    const [text_input, SetTextInput] = useState(\"\");\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>Todos:</Text>\n            <ScrollView>\n                {\n                    todos.map((todo, index) => {\n                        return (\n                            <TouchableOpacity key={index} style={styles.todo} onPress={() =>\n                                SetTodos(todos.filter((t, i) => i != index))\n                            }>\n                                <Text style={styles.add_text}>{todo.title}</Text>\n                            </TouchableOpacity>\n                        )\n                    })\n                }\n            </ScrollView>\n            <View style={styles.form}>\n                <TouchableOpacity onPress={() => navigation.goBack()}>\n                    <View style={styles.addButton}>\n                        <Text>Back</Text>\n                    </View>\n                </TouchableOpacity>\n                <TextInput value={text_input} style={styles.input} onChange={(event) => {\n                    event.preventDefault();\n                    SetTextInput(event.target.value);\n                }}\n                    onSubmitEditing={() => {\n                        if (!text_input.length) {\n                            SetTodos(todos.concat([{\n                                'title': text_input\n                            }]));\n                            SetTextInput(\"\");\n                        }\n                }} />\n                <TouchableOpacity onPress={() => {\n                    SetTodos(todos.concat([{\n                        'title': text_input\n                    }]));\n                    SetTextInput(\"\");\n                }}>\n                    <View style={styles.addButton}>\n                        <Text>+</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 10,\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-around'\n    },\n    title: {\n        textAlign: 'center',\n        fontSize: 24,\n        fontWeight: 'bold',\n    },\n    todo: {\n        borderRadius: 10,\n        borderBottomWidth: 1,\n        padding: 10,\n        marginVertical: 2,\n        backgroundColor: '#8AD1DB'\n    },\n    form: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignSelf: 'center'\n    },\n    input: {\n        borderColor: 'black',\n        borderWidth: 2,\n        justifyContent: 'flex-start',\n        padding: 20,\n        marginHorizontal: 10,\n        height: 50,\n        borderRadius: 10\n    },\n    addButton: {\n        justifyContent: 'flex-end',\n        justifyContent: 'center',\n        textAlign: 'center',\n        borderRadius: \"100%\",\n        height: 50,\n        width: 50,\n        backgroundColor: '#8AD1DB'\n    },\n});"]},"metadata":{},"sourceType":"module"}