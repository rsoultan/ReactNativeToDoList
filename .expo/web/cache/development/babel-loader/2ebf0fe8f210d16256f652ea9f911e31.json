{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    \"id\": 0,\n    \"title\": \"Taffer\",\n    \"done\": true\n  }, {\n    \"id\": 1,\n    \"title\": \"Faire les courses\",\n    \"done\": false\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      SetTasks = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text_input = _useState4[0],\n      SetTextInput = _useState4[1];\n\n  var renderTasks = function renderTasks(task, expected) {\n    if (task.done !== expected) return null;\n    return _jsxs(View, {\n      style: styles.task,\n      children: [_jsx(Text, {\n        style: styles.small_text,\n        children: task.title\n      }), _jsx(Button, {\n        title: \"move\",\n        onPress: function onPress() {\n          var new_tasks = tasks;\n          var task_to_edit = new_tasks.find(function (t) {\n            return t.id === task.id;\n          });\n          task_to_edit.done = !task_to_edit.done;\n          SetTasks(new_tasks);\n        }\n      })]\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.title_section,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Todo list\"\n      })\n    }), _jsxs(View, {\n      style: styles.content_section,\n      children: [_jsxs(View, {\n        style: styles.tasks_section,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Task(s) to do:\"\n        }), _jsx(FlatList, {\n          data: tasks,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return renderTasks(item, false);\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.tasks_section,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Task(s) done:\"\n        }), _jsx(FlatList, {\n          data: tasks,\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return renderTasks(item, true);\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.bottom_section\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Platform.OS === 'android' ? 35 : 0,\n    backgroundColor: \"#D4FBFF\"\n  },\n  title_section: {\n    flex: 0.5,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignContent: 'center',\n    backgroundColor: \"#5C8C91\"\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  content_section: {\n    flex: 5,\n    backgroundColor: \"#A2D9DF\"\n  },\n  tasks_section: {\n    flex: 3\n  },\n  bottom_section: {\n    flex: 0.5,\n    backgroundColor: '#5C8C91'\n  },\n  task: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    backgroundColor: '#5C8C91',\n    borderRadius: 20,\n    padding: 20,\n    marginBottom: 10\n  },\n  delete_button: {\n    padding: 10,\n    backgroundColor: '#D5D8D8'\n  },\n  small_text: {\n    fontSize: 12,\n    textAlign: 'center',\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/home/romuald/ReactNativeToDoList/Todo.jsx"],"names":["useState","TodoScreen","navigation","tasks","SetTasks","text_input","SetTextInput","renderTasks","task","expected","done","styles","small_text","title","new_tasks","task_to_edit","find","t","id","container","title_section","content_section","tasks_section","item","bottom_section","StyleSheet","create","flex","paddingTop","Platform","OS","backgroundColor","flexDirection","justifyContent","alignContent","textAlign","fontSize","fontWeight","color","borderRadius","padding","marginBottom","delete_button"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, FlatList, SafeAreaView, Platform, Button } from 'react-native';\nimport { useState } from \"react\";\n\nexport default function TodoScreen({ navigation }) {\n    const [tasks, SetTasks] = useState([{\n        \"id\": 0,\n        \"title\": \"Taffer\",\n        \"done\": true\n    }, {\n        \"id\": 1,\n        \"title\": \"Faire les courses\",\n        \"done\": false\n    }]);\n    const [text_input, SetTextInput] = useState(\"\");\n    const renderTasks = (task, expected) => {\n        if (task.done !== expected)\n            return null;\n        return (\n            <View style={styles.task}>\n                <Text style={styles.small_text}>{task.title}</Text>\n                <Button title='move' onPress={() => {\n                    const new_tasks = tasks;\n                    const task_to_edit = new_tasks.find((t) => t.id === task.id)\n                    task_to_edit.done = !task_to_edit.done;\n                    SetTasks(new_tasks);\n                }}></Button>\n            </View>\n        );\n    };\n    return (\n        <SafeAreaView style={styles.container}>\n            <View style={styles.title_section}>\n                <Text style={styles.title}>Todo list</Text>\n            </View>\n            <View style={styles.content_section}>\n                <View style={styles.tasks_section}>\n                    <Text style={styles.title}>Task(s) to do:</Text>\n                    <FlatList\n                        data={tasks}\n                        renderItem={({ item }) => renderTasks(item, false)}\n                        keyExtractor={(item) => item.id}\n                    />\n                </View>\n                <View style={styles.tasks_section}>\n                    <Text style={styles.title}>Task(s) done:</Text>\n                    <FlatList\n                        data={tasks}\n                        renderItem={({ item }) => renderTasks(item, true)}\n                        keyExtractor={(item) => item.id}\n                    />\n                </View>\n            </View>\n            <View style={styles.bottom_section}>\n\n            </View>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingTop: Platform.OS === 'android' ? 35 : 0,\n        backgroundColor: \"#D4FBFF\"\n    },\n    title_section: {\n        flex: 0.5,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignContent: 'center',\n        backgroundColor: \"#5C8C91\"\n    },\n    title: {\n        textAlign: 'center',\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: 'white'\n    },\n    content_section: {\n        flex: 5,\n        backgroundColor: \"#A2D9DF\"\n    },\n    tasks_section: {\n        flex: 3\n    },\n    bottom_section: {\n        flex: 0.5,\n        backgroundColor: '#5C8C91'\n    },\n    task: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        backgroundColor: '#5C8C91',\n        borderRadius: 20,\n        padding: 20,\n        marginBottom: 10,\n    },\n    delete_button: {\n        padding: 10,\n        backgroundColor: '#D5D8D8'\n    },\n    small_text: {\n        fontSize: 12,\n        textAlign: 'center',\n        color: 'white',\n        fontWeight: 'bold'\n    }\n});"]},"metadata":{},"sourceType":"module"}