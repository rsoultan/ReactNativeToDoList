{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      SetTodos = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text_input = _useState4[0],\n      SetTextInput = _useState4[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Todos:\"\n    }), _jsx(ScrollView, {\n      style: styles.todos,\n      children: todos.map(function (todo) {\n        return _jsx(TouchableOpacity, {\n          style: styles.todo,\n          onPress: function onPress() {\n            return SetTodos(todos.filter(function (t) {\n              return t.id != todo.id;\n            }));\n          },\n          children: _jsx(Text, {\n            style: styles.add_text,\n            children: todo.title\n          })\n        }, todo.id);\n      })\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        on: true\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(View, {\n          style: styles.addButton,\n          children: _jsx(Text, {\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    padding: 20\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  todos: {\n    flex: 5\n  },\n  todo: {\n    borderRadius: 10,\n    borderBottomWidth: 1,\n    padding: 10,\n    marginVertical: 2,\n    backgroundColor: \"blue\"\n  },\n  form: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  input: {\n    justifyContent: 'flex-start',\n    padding: 20,\n    height: 50,\n    backgroundColor: \"grey\",\n    borderRadius: 10\n  },\n  addButton: {\n    justifyContent: 'flex-end',\n    marginLeft: 10,\n    justifyContent: 'center',\n    textAlign: 'center',\n    height: 50,\n    width: 50,\n    borderRadius: \"100%\"\n  }\n});","map":{"version":3,"sources":["/home/romuald/ReactNativeToDoList/Todo.jsx"],"names":["useState","TodoScreen","navigation","todos","SetTodos","text_input","SetTextInput","styles","container","title","map","todo","filter","t","id","add_text","form","input","addButton","StyleSheet","create","flex","flexDirection","padding","textAlign","fontSize","fontWeight","borderRadius","borderBottomWidth","marginVertical","backgroundColor","justifyContent","height","marginLeft","width"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, ScrollView, TouchableOpacity, TextInput, Button } from 'react-native';\nimport { useState } from \"react\";\n\nexport default function TodoScreen({ navigation }) {\n    const [todos, SetTodos] = useState([]);\n    const [text_input, SetTextInput] = useState(\"\");\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>Todos:</Text>\n            <ScrollView style={styles.todos}>\n                {\n                    todos.map((todo) => {\n                        return (\n                            <TouchableOpacity key={todo.id} style={styles.todo} onPress={() =>\n                                SetTodos(todos.filter((t) => t.id != todo.id))\n                            }>\n                                <Text style={styles.add_text}>{todo.title}</Text>\n                            </TouchableOpacity>\n                        )\n                    })\n                }\n            </ScrollView>\n            <View style={styles.form}>\n                <TextInput style={styles.input} on></TextInput>\n                <TouchableOpacity>\n                    <View style={styles.addButton}>\n                        <Text>+</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        padding: 20\n    },\n    title: {\n        textAlign: 'center',\n        fontSize: 24,\n        fontWeight: 'bold',\n    },\n    todos: {\n        flex: 5\n    },\n    todo: {\n        borderRadius: 10,\n        borderBottomWidth: 1,\n        padding: 10,\n        marginVertical: 2,\n        backgroundColor: \"blue\"\n    },\n    form: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n    input: {\n        justifyContent: 'flex-start',\n        padding: 20,\n        height: 50,\n        backgroundColor: \"grey\",\n        borderRadius: 10\n    },\n    addButton: {\n        justifyContent: 'flex-end',\n        marginLeft: 10,\n        justifyContent: 'center',\n        textAlign: 'center',\n        height: 50,\n        width: 50,\n        borderRadius: \"100%\",\n    },\n});"]},"metadata":{},"sourceType":"module"}